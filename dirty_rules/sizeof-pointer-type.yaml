rules:
  - id: sizeof-pointer-type
    message: Using `sizeof(...)` on a pointer type is error prone and can lead to
      memory corruption if the incorrect size is used to allocate memory. An
      explicit length should be used instead of using `sizeof(...)`.
    severity: WARNING
    metadata:
      likelihood: LOW
      impact: LOW
      confidence: MEDIUM
      category: security
      subcategory:
        - vuln
      cert:
        - ARR01-C
        - C
        - C++
        - L1
      cwe:
        - "CWE-467: Use of sizeof() on a Pointer Type"
      references:
        - https://wiki.sei.cmu.edu/confluence/display/c/ARR01-C.+Do+not+apply+the+sizeof+operator+to+a+pointer+when+taking+the+size+of+an+array
      technology:
        - cpp
      license: Copyright 2023 Semgrep, Inc.
      vulnerability_class:
        - Other
    languages:
      - c++
      - c
    min-version: 1.59.0
    pattern-either:
      # type-based patterns (some types are missing)
      - patterns:
        - pattern: sizeof((char * $PTR))
        - pattern-not: sizeof("...")
      - pattern: sizeof((int * $PTR))
      - pattern: sizeof((float * $PTR))
      - pattern: sizeof((double * $PTR))
      # other patterns (function calls are not covered)
      - patterns:
        - pattern: sizeof($PTR)
        - pattern-either:
          - pattern-inside: |
              $TYPE * $PTR;
              ...
          - pattern-inside: |
              $TYPE * $PTR = $EXPR;
              ...
      - patterns:
          - pattern-inside: |
              $TY $FUN(..., $PTR_TY *$PTR_PARAM, ...) {
                ...
              }
          - pattern-not-inside: |
              $TY $FUN(..., $PTR_TY **$PTR_PARAM, ...) {
                ...
              }
          - pattern-either:
              - pattern: sizeof($PTR_PARAM)
              - pattern: sizeof($PTR_PARAM + (...))
              - pattern: sizeof((...) + $PTR_PARAM)
      - patterns:
          - pattern-inside: |
              $TY $FUN(...) {
                ...
                $PTR_TY *$PTR_PARAM;
                ...
              }
          - pattern-not-inside: |
              $TY $FUN(...) {
                ...
                $PTR_TY **$PTR_PARAM;
                ...
              }
          - pattern-either:
              - pattern: sizeof($PTR_PARAM)
              - pattern: sizeof($PTR_PARAM + (...))
              - pattern: sizeof((...) + $PTR_PARAM)
      - patterns:
          - pattern-inside: |
              $TY $FUN(...) {
                ...
                $PTR_TY *$PTR_PARAM = ...;
                ...
              }
          - pattern-not-inside: |
              $TY $FUN(...) {
                ...
                $PTR_TY **$PTR_PARAM = ...;
                ...
              }
          - pattern-either:
              - pattern: sizeof($PTR_PARAM)
              - pattern: sizeof($PTR_PARAM + (...))
              - pattern: sizeof((...) + $PTR_PARAM)
      - patterns:
          - pattern-inside: |
              $TY $FUN(..., $ARR_TY $ARR_PARAM[$SIZE], ...) {
                ...
              }
          - pattern-either:
              - pattern: sizeof($ARR_PARAM)
              - pattern: sizeof($ARR_PARAM + (...))
              - pattern: sizeof((...) + $ARR_PARAM)
      - patterns:
          - pattern-inside: |
              $TY $FUN(..., $ARR_TY $ARR_PARAM[], ...) {
                ...
              }
          - pattern-either:
              - pattern: sizeof($ARR_PARAM)
              - pattern: sizeof($ARR_PARAM + (...))
              - pattern: sizeof((...) + $ARR_PARAM)
